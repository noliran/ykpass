#!/bin/bash

DEFAULT_CHALLENGE=$(which default_ykpass_challenge >/dev/null 2>/dev/null && default_ykpass_challenge)

if [ -z "$CHALLENGE" ] ; then
  CHALLENGE=$($ASK_CMD "Generate password for: " $DEFAULT_CHALLENGE)
  if [ -z "$CHALLENGE" ] ; then
    echo "CHALLENGE is empty; giving up"
    exit 1
  fi
fi

if [ -z "$SALT" ] ; then
  echo "SALT is empty; giving up"
  exit 1
fi

METHOD=m1_cmd
LENGTH=16
if [ "${CHALLENGE: -1}" = "!" ] ; then
  METHOD=m2_cmd
  LENGTH=16
  CHALLENGE=${CHALLENGE%?}
elif [ "${CHALLENGE: -1}" = "@" ] ; then
  METHOD=m3_cmd
  LENGTH=12
  CHALLENGE=${CHALLENGE%?}
elif [ "${CHALLENGE: -1}" = "#" ] ; then
  METHOD=m4_cmd
  LENGTH=8
  CHALLENGE=${CHALLENGE%?}
elif [ "${CHALLENGE: -1}" = "$" ] ; then
  METHOD=m5_cmd
  LENGTH=8
  CHALLENGE=${CHALLENGE%?}
fi

RESPONSE=$(echo -en "$SALT,$CHALLENGE" | ykchalresp.exe -i- | xxd -r -p | $METHOD)

if [ ${#RESPONSE} -ne $LENGTH ] ; then
  echo "Length assertion: got ${#RESPONSE} characters but expected $LENGTH"
  exit 1
fi

$TYPE_CMD "$RESPONSE"
